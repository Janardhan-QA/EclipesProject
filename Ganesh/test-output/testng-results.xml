<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="2" total="3" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Demo Suite" duration-ms="38" started-at="2019-08-11T12:15:18Z" finished-at="2019-08-11T12:15:18Z">
    <groups>
      <group name="md">
        <method signature="Jannu.testCase3(java.lang.String)[pri:0, instance:PackTwo.Jannu@17d99928]" name="testCase3" class="PackTwo.Jannu"/>
      </group> <!-- md -->
      <group name="jd">
        <method signature="Jannu.testCase1()[pri:0, instance:PackTwo.Jannu@17d99928]" name="testCase1" class="PackTwo.Jannu"/>
        <method signature="Jannu.testCase2()[pri:0, instance:PackTwo.Jannu@17d99928]" name="testCase2" class="PackTwo.Jannu"/>
      </group> <!-- jd -->
    </groups>
    <test name="Demo test" duration-ms="38" started-at="2019-08-11T12:15:18Z" finished-at="2019-08-11T12:15:18Z">
      <class name="PackTwo.Jannu">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:PackTwo.Jannu@17d99928]" name="beforeSuite" is-config="true" duration-ms="9" started-at="2019-08-11T17:45:18Z" finished-at="2019-08-11T17:45:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:PackTwo.Jannu@17d99928]" name="beforeTest" is-config="true" duration-ms="0" started-at="2019-08-11T17:45:18Z" finished-at="2019-08-11T17:45:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:PackTwo.Jannu@17d99928]" name="beforeClass" is-config="true" duration-ms="0" started-at="2019-08-11T17:45:18Z" finished-at="2019-08-11T17:45:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforemethod()[pri:0, instance:PackTwo.Jannu@17d99928]" name="beforemethod" is-config="true" duration-ms="0" started-at="2019-08-11T17:45:18Z" finished-at="2019-08-11T17:45:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="SKIP" signature="testCase1()[pri:0, instance:PackTwo.Jannu@17d99928]" name="testCase1" duration-ms="4" started-at="2019-08-11T17:45:18Z" finished-at="2019-08-11T17:45:18Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[ throw new SkipException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException:  throw new SkipException
	at PackTwo.Jannu.testCase1(Jannu.java:72)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:822)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1130)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:113)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:206)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:177)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase1 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:PackTwo.Jannu@17d99928]" name="afterMethod" is-config="true" duration-ms="0" started-at="2019-08-11T17:45:18Z" finished-at="2019-08-11T17:45:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="FAIL" signature="testCase2()[pri:0, instance:PackTwo.Jannu@17d99928]" name="testCase2" duration-ms="9" started-at="2019-08-11T17:45:18Z" finished-at="2019-08-11T17:45:18Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
	expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
	expected [true] but found [false]
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)
	at PackTwo.Jannu.testCase2(Jannu.java:82)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:822)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1130)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:113)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:206)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:177)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase2 -->
        <test-method status="PASS" signature="beforemethod()[pri:0, instance:PackTwo.Jannu@17d99928]" name="beforemethod" is-config="true" duration-ms="0" started-at="2019-08-11T17:45:18Z" finished-at="2019-08-11T17:45:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:PackTwo.Jannu@17d99928]" name="afterMethod" is-config="true" duration-ms="1" started-at="2019-08-11T17:45:18Z" finished-at="2019-08-11T17:45:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforemethod()[pri:0, instance:PackTwo.Jannu@17d99928]" name="beforemethod" is-config="true" duration-ms="1" started-at="2019-08-11T17:45:18Z" finished-at="2019-08-11T17:45:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="FAIL" signature="testCase3(java.lang.String)[pri:0, instance:PackTwo.Jannu@17d99928]" name="testCase3" duration-ms="2" started-at="2019-08-11T17:45:18Z" finished-at="2019-08-11T17:45:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[P3048]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ ASSERT HAS FAILED MESSAGE expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  ASSERT HAS FAILED MESSAGE expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at PackTwo.Jannu.testCase3(Jannu.java:88)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:822)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1130)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:113)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:206)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:177)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCase3 -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:PackTwo.Jannu@17d99928]" name="afterClass" is-config="true" duration-ms="0" started-at="2019-08-11T17:45:18Z" finished-at="2019-08-11T17:45:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:PackTwo.Jannu@17d99928]" name="afterMethod" is-config="true" duration-ms="0" started-at="2019-08-11T17:45:18Z" finished-at="2019-08-11T17:45:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:PackTwo.Jannu@17d99928]" name="afterTest" is-config="true" duration-ms="0" started-at="2019-08-11T17:45:18Z" finished-at="2019-08-11T17:45:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:PackTwo.Jannu@17d99928]" name="afterSuite" is-config="true" duration-ms="0" started-at="2019-08-11T17:45:19Z" finished-at="2019-08-11T17:45:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- PackTwo.Jannu -->
    </test> <!-- Demo test -->
  </suite> <!-- Demo Suite -->
</testng-results>
